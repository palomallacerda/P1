#include <stdio.h>

void imprimir_matriz(int i, int j, int n, int matriz[][n])
{
	if (i < n)
	{
		if (j < n)
		{
			printf("%d ", matriz[i][j]);
			imprimir_matriz(i, ++j, n, matriz);
		}
		else
		{
			printf("\n");
		 	imprimir_matriz(++i, 0, n, matriz);
		}
	}
}

int ler_matrizdireitaesquerda(int i, int j, int n, int matriz[][n], int *times, int posicao[])
{
	if (n > 0)
	{
		if (j > *times)
		{
			scanf("%d", &matriz[i][j]);
			printf("I:%d J: %d\n", i, j);
			printf("limite: %d\n", *times);

			ler_matrizdireitaesquerda(i, --j, n, matriz, times, posicao);
		}
		else
		{
			posicao[0] = i+1;
			posicao[1] = j+1;

			*times = *times+1;
			return *times;
		}
	}
}

int ler_matrizbaixocima(int i, int j, int n, int matriz[][n], int *times, int posicao[])
{
	if (n > 0)
	{
		if (i >= *times)
		{
			scanf("%d", &matriz[i][j]);
			
			printf("I: %d J: %d\n", i, j);
			printf("limite; %d\n", *times);
			ler_matrizbaixocima(--i, j, n, matriz, times, posicao);
		}
		else
		{

			*times = ler_matrizdireitaesquerda(i+1, j-1, n, matriz, times, posicao);
			return *times;
		}
	}
}

int ler_matriz_esquerdadireita(int i, int j, int n, int matriz[][n], int *times, int posicao[])
{
	if (n > 0)
	{
		if (j < n)
		{
			scanf("%d", &matriz[i][j]);
			printf("I: %d J: %d\n", i, j);
			printf("limite: %d\n", n);
			ler_matriz_esquerdadireita(i, ++j, n, matriz, times, posicao);
		}
		else
		{	

			i--;
			*times = ler_matrizbaixocima(i, j-1, n, matriz, times, posicao);
			return *times;	
		}

	}
}


void ler_matriz_cimabaixo(int i, int j, int n, int matriz[][n], int times)
{
	if (n > 0)
	{
		if (i < n)
		{
			scanf("%d", &matriz[i][j]);
			printf("i: %d J: %d\n", i, j);
			printf("limite: %d\n", n);
			ler_matriz_cimabaixo(++i, j, n, matriz, times);
		}
		else
		{

			int posicao[2];
			i--; j++;	
			times = ler_matriz_esquerdadireita(i, j, n, matriz, Ã—, posicao);
				
			ler_matriz_cimabaixo(posicao[0], posicao[1], n-times, matriz, times);
		}
 	}
}

int main()
{
	int n;
	scanf("%d", &n);

	int matriz[n][n];

	ler_matriz_cimabaixo(0, 0, n, matriz, 0);

	printf("%d\n", matriz[1][2]);
	
	//imprimir_matriz(0, 0, n, matriz);

	return 0;
