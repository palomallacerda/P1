#include <stdio.h>

int vefiricar_matriz_dath2(int i, int j, int matriz_dath[][3], int x, int y, int luke) /*diagonal secundaria*/
{
	if (i < 3)
	{
		if (j < 3)
		{
			if (i == 0 && j == 2|| i == 1 && j == 1 || i == 2 && j == 0)
			{
				if (matriz_dath[i][j] == 1) x++;	
				else y++;
			}
			else
			{
				if (matriz_dath[i][j] == 0) y++;
			}
			vefiricar_matriz_dath2(i, ++j, matriz_dath, x, y, luke);
		}
		else vefiricar_matriz_dath2(++i, 0, matriz_dath, x, y, luke);
	}
	else
	{
		if ( x == 3 && y == 6)
		{
			if (luke == 1)
			{
				return 0;
			}
			else
			{
				return 1;	
			}
		}
		else
		{
			if (luke == 0 && y != 6)
			{
				return 0;
			}
			else return -1;
		}
	}

}

int vefiricar_matriz_dath1(int i, int j, int matriz_dath[][3], int x, int y, int luke) /*diagonal principal*/
{
	if (i < 3)
	{
		if (j < 3)
		{
			if (i == j)
			{
				if (matriz_dath[i][j] == 1) x++;	
				else y++;
			}
			else
			{
				if (matriz_dath[i][j] == 0) y++;
			}
			vefiricar_matriz_dath1(i, ++j, matriz_dath, x, y, luke);
		}
		else vefiricar_matriz_dath1(++i, 0, matriz_dath, x, y, luke);
	}
	else
	{
		if (x == 3 && y == 6)
			{
			if (luke == 1)
			{
				return 0; /*empate*/
			}
			else
			{
				return 1; /*darth*/ 
			}
		}
		else
		{
			int valor = vefiricar_matriz_dath2(0,0, matriz_dath, 0,0, luke);
			return valor;
		}
	}

}

int vefiricar_matriz_luke2(int i, int j, int matriz_luke[][3], int x, int y) /*diagonal secundaria*/
{
	if (i < 3)
	{
		if (j < 3)
		{
			if (i == 0 && j == 2|| i == 1 && j == 1 || i == 2 && j == 0)
			{
				if (matriz_luke[i][j] == 1) x++;	
				else y++;
			}
			else
			{
				if (matriz_luke[i][j] == 0) y++;
			}
			vefiricar_matriz_luke2(i, ++j, matriz_luke, x, y);
		}
		else vefiricar_matriz_luke2(++i, 0, matriz_luke, x, y);
	}
	else
	{
		if ( x == 3 && y == 6)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}

}

int vefiricar_matriz_luke1(int i, int j, int matriz_luke[][3], int x, int y) /*diagonal principal*/
{
	if (i < 3)
	{
		if (j < 3)
		{
			if (i == j)
			{
				if (matriz_luke[i][j] == 1) x++;	
			}
			else
			{
				if (matriz_luke[i][j] == 0) y++;

			}
			vefiricar_matriz_luke1(i, ++j, matriz_luke, x, y);
		}
		else vefiricar_matriz_luke1(++i, 0, matriz_luke, x, y);
	}
	else
	{
		if (x == 3 && y == 6)
		{
			return 1;
		}
		else
		{
			int luke = vefiricar_matriz_luke2(0,0, matriz_luke, 0,0);
			return luke;
		}
	}

}

int ler_matriz_dath(int i, int j, int matriz_dath[][3], int matriz_luke[][3], int vida_luke, int vida_dath, int *flag) /*lendo matriz do darth*/
{
	if (i < 3)
	{
		if (j < 3)
		{
		    if(scanf("%d", &matriz_dath[i][j]) == EOF) *flag = 1;
			ler_matriz_dath(i, ++j, matriz_dath, matriz_luke, vida_luke, vida_dath, flag);
		}
		else ler_matriz_dath(++i, 0, matriz_dath, matriz_luke, vida_luke, vida_dath, flag);
	}
	else
	{
	   	int luke = vefiricar_matriz_luke1(0, 0, matriz_luke, 0, 0);
		int valor = vefiricar_matriz_dath1(0, 0, matriz_dath, 0, 0,  luke);
	
		return valor;
	}
}

int ler_matriz_luke(int i, int j, int matriz_luke[][3]) /*lendo matriz do luke*/
{
	if (i < 3)
	{
		if (j < 3)
		{
			scanf("%d", &matriz_luke[i][j]);
			ler_matriz_luke(i, ++j, matriz_luke);
		}
		else ler_matriz_luke(++i, 0, matriz_luke);
	}
}


void rounds(int matriz_luke[][3], int matriz_dath[][3], int vida_dath, int vida_luke, int valor)
{	
    int flag = 0;
	int x = ler_matriz_luke(0,0, matriz_luke);
	valor = ler_matriz_dath(0, 0, matriz_dath, matriz_luke, vida_luke, vida_dath, &flag);
		
	if (valor == 1) /*dath ganhou*/
	{
		vida_luke -= 15;
	}
	else if (valor == -1)
	{
		vida_dath -= 15;
	}
	

    if(flag == 1){
    	if (vida_luke > vida_dath)
    	{
    		printf("Luke Skywalker venceu.\n");
    	}
    	else if(vida_dath > vida_luke)
    	{
    		printf("Darth Vader venceu.\n");
    	}
    	else
    	{
    		printf("Houve empate.\n");
    	}
    } else {
        rounds(matriz_luke, matriz_dath, vida_dath, vida_luke, valor);
    }
}

int main()
{
	int vida_luke, vida_dath;
	scanf("%d %d\n", &vida_luke, &vida_dath);

	int matriz_luke[3][3];
	int matriz_dath[3][3];

	rounds(matriz_luke, matriz_dath, vida_dath, vida_luke, 0);
	return 0;
}
